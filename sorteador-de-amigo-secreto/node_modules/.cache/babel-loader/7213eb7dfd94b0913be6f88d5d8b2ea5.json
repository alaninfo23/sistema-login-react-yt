{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { erroState, listaParticipantesState } from \"../atom\";\nexport const useAdicionarParticipante = () => {\n  _s();\n\n  const setLista = useSetRecoilState(listaParticipantesState);\n  const lista = useRecoilValue(listaParticipantesState);\n  const setErro = useSetRecoilState(erroState);\n  return nomeDoParticipante => {\n    if (lista.includes(nomeDoParticipante)) {\n      setErro('Nomes duplicados n達o s達o permitidos!');\n      setTimeout(() => {\n        setErro(\"\");\n      }, 5000);\n      return;\n    }\n\n    return setLista(listaAtual => [...listaAtual, nomeDoParticipante]);\n  };\n};\n\n_s(useAdicionarParticipante, \"HPoCpwECXYJIUnkY+nBGkdDQUXE=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useSetRecoilState];\n});","map":{"version":3,"sources":["/home/jose-rocha/Projetos/sorteador-de-amigo-secreto/src/state/hook/useAdicionarParticipante.ts"],"names":["useRecoilValue","useSetRecoilState","erroState","listaParticipantesState","useAdicionarParticipante","setLista","lista","setErro","nomeDoParticipante","includes","setTimeout","listaAtual"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,SAASC,SAAT,EAAoBC,uBAApB,QAAmD,SAAnD;AAEA,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AAC1C,QAAMC,QAAQ,GAAGJ,iBAAiB,CAACE,uBAAD,CAAlC;AACA,QAAMG,KAAK,GAAGN,cAAc,CAACG,uBAAD,CAA5B;AACA,QAAMI,OAAO,GAAGN,iBAAiB,CAACC,SAAD,CAAjC;AACA,SAAQM,kBAAD,IAAgC;AACnC,QAAIF,KAAK,CAACG,QAAN,CAAeD,kBAAf,CAAJ,EAAwC;AACpCD,MAAAA,OAAO,CAAC,sCAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,MAAM;AACbH,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGA;AACH;;AACD,WAAOF,QAAQ,CAACM,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBH,kBAAhB,CAAf,CAAf;AACH,GATD;AAUH,CAdM;;GAAMJ,wB;UACQH,iB,EACHD,c,EACEC,iB","sourcesContent":["import { useRecoilValue, useSetRecoilState } from \"recoil\"\nimport { erroState, listaParticipantesState } from \"../atom\"\n\nexport const useAdicionarParticipante = () => {\n    const setLista = useSetRecoilState(listaParticipantesState)\n    const lista = useRecoilValue(listaParticipantesState)\n    const setErro = useSetRecoilState(erroState)\n    return (nomeDoParticipante: string) => {\n        if (lista.includes(nomeDoParticipante)) {\n            setErro('Nomes duplicados n達o s達o permitidos!')\n            setTimeout(() => {\n                setErro(\"\")\n            }, 5000)\n            return\n        }\n        return setLista(listaAtual => [...listaAtual, nomeDoParticipante])\n    }\n}"]},"metadata":{},"sourceType":"module"}